/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package src.idm_mml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package src.idm_mml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import src.idm_mml.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMML
entryRuleMML
:
{ before(grammarAccess.getMMLRule()); }
	 ruleMML
{ after(grammarAccess.getMMLRule()); } 
	 EOF 
;

// Rule MML
ruleMML 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMMLAccess().getGroup()); }
		(rule__MML__Group__0)
		{ after(grammarAccess.getMMLAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplementation
entryRuleImplementation
:
{ before(grammarAccess.getImplementationRule()); }
	 ruleImplementation
{ after(grammarAccess.getImplementationRule()); } 
	 EOF 
;

// Rule Implementation
ruleImplementation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplementationAccess().getAlternatives()); }
		(rule__Implementation__Alternatives)
		{ after(grammarAccess.getImplementationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataset
entryRuleDataset
:
{ before(grammarAccess.getDatasetRule()); }
	 ruleDataset
{ after(grammarAccess.getDatasetRule()); } 
	 EOF 
;

// Rule Dataset
ruleDataset 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDatasetAccess().getGroup()); }
		(rule__Dataset__Group__0)
		{ after(grammarAccess.getDatasetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStrategie
entryRuleStrategie
:
{ before(grammarAccess.getStrategieRule()); }
	 ruleStrategie
{ after(grammarAccess.getStrategieRule()); } 
	 EOF 
;

// Rule Strategie
ruleStrategie 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStrategieAccess().getAlternatives()); }
		(rule__Strategie__Alternatives)
		{ after(grammarAccess.getStrategieAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValidation
entryRuleValidation
:
{ before(grammarAccess.getValidationRule()); }
	 ruleValidation
{ after(grammarAccess.getValidationRule()); } 
	 EOF 
;

// Rule Validation
ruleValidation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValidationAccess().getGroup()); }
		(rule__Validation__Group__0)
		{ after(grammarAccess.getValidationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCrossValidation
entryRuleCrossValidation
:
{ before(grammarAccess.getCrossValidationRule()); }
	 ruleCrossValidation
{ after(grammarAccess.getCrossValidationRule()); } 
	 EOF 
;

// Rule CrossValidation
ruleCrossValidation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCrossValidationAccess().getGroup()); }
		(rule__CrossValidation__Group__0)
		{ after(grammarAccess.getCrossValidationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCible
entryRuleCible
:
{ before(grammarAccess.getCibleRule()); }
	 ruleCible
{ after(grammarAccess.getCibleRule()); } 
	 EOF 
;

// Rule Cible
ruleCible 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCibleAccess().getGroup()); }
		(rule__Cible__Group__0)
		{ after(grammarAccess.getCibleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredictives
entryRulePredictives
:
{ before(grammarAccess.getPredictivesRule()); }
	 rulePredictives
{ after(grammarAccess.getPredictivesRule()); } 
	 EOF 
;

// Rule Predictives
rulePredictives 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredictivesAccess().getGroup()); }
		(rule__Predictives__Group__0)
		{ after(grammarAccess.getPredictivesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidColonne
entryRuleidColonne
:
{ before(grammarAccess.getIdColonneRule()); }
	 ruleidColonne
{ after(grammarAccess.getIdColonneRule()); } 
	 EOF 
;

// Rule idColonne
ruleidColonne 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdColonneAccess().getGroup()); }
		(rule__IdColonne__Group__0)
		{ after(grammarAccess.getIdColonneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlgorithme
entryRuleAlgorithme
:
{ before(grammarAccess.getAlgorithmeRule()); }
	 ruleAlgorithme
{ after(grammarAccess.getAlgorithmeRule()); } 
	 EOF 
;

// Rule Algorithme
ruleAlgorithme 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getGroup()); }
		(rule__Algorithme__Group__0)
		{ after(grammarAccess.getAlgorithmeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetrique
entryRuleMetrique
:
{ before(grammarAccess.getMetriqueRule()); }
	 ruleMetrique
{ after(grammarAccess.getMetriqueRule()); } 
	 EOF 
;

// Rule Metrique
ruleMetrique 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetriqueAccess().getGroup()); }
		(rule__Metrique__Group__0)
		{ after(grammarAccess.getMetriqueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationAccess().getGroup_0()); }
		(rule__Implementation__Group_0__0)
		{ after(grammarAccess.getImplementationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getImplementationAccess().getGroup_1()); }
		(rule__Implementation__Group_1__0)
		{ after(grammarAccess.getImplementationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strategie__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategieAccess().getGroup_0()); }
		(rule__Strategie__Group_0__0)
		{ after(grammarAccess.getStrategieAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStrategieAccess().getCrossValidationParserRuleCall_1()); }
		ruleCrossValidation
		{ after(grammarAccess.getStrategieAccess().getCrossValidationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MML__Group__0__Impl
	rule__MML__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMLAccess().getMMLKeyword_0()); }
	'MML'
	{ after(grammarAccess.getMMLAccess().getMMLKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MML__Group__1__Impl
	rule__MML__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMLAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMMLAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MML__Group__2__Impl
	rule__MML__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMMLAccess().getMmlAssignment_2()); }
		(rule__MML__MmlAssignment_2)
		{ after(grammarAccess.getMMLAccess().getMmlAssignment_2()); }
	)
	(
		{ before(grammarAccess.getMMLAccess().getMmlAssignment_2()); }
		(rule__MML__MmlAssignment_2)*
		{ after(grammarAccess.getMMLAccess().getMmlAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MML__Group__3__Impl
	rule__MML__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMMLAccess().getMmlAssignment_3()); }
		(rule__MML__MmlAssignment_3)
		{ after(grammarAccess.getMMLAccess().getMmlAssignment_3()); }
	)
	(
		{ before(grammarAccess.getMMLAccess().getMmlAssignment_3()); }
		(rule__MML__MmlAssignment_3)*
		{ after(grammarAccess.getMMLAccess().getMmlAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MML__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMMLAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMMLAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_0__0__Impl
	rule__Implementation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getImplementationAction_0_0()); }
	()
	{ after(grammarAccess.getImplementationAccess().getImplementationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_0__1__Impl
	rule__Implementation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getImplementationKeyword_0_1()); }
	'Implementation'
	{ after(grammarAccess.getImplementationAccess().getImplementationKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getScikitLearnKeyword_0_2()); }
	'Scikit-learn'
	{ after(grammarAccess.getImplementationAccess().getScikitLearnKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_1__0__Impl
	rule__Implementation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getWekaKeyword_1_0()); }
	'Weka'
	{ after(grammarAccess.getImplementationAccess().getWekaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_1__1__Impl
	rule__Implementation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getImplementationAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_1__2__Impl
	rule__Implementation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getAlgoAssignment_1_2()); }
	(rule__Implementation__AlgoAssignment_1_2)
	{ after(grammarAccess.getImplementationAccess().getAlgoAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_1__3__Impl
	rule__Implementation__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getMetriqueAssignment_1_3()); }
	(rule__Implementation__MetriqueAssignment_1_3)
	{ after(grammarAccess.getImplementationAccess().getMetriqueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_1__4__Impl
	rule__Implementation__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getStrategieAssignment_1_4()); }
	(rule__Implementation__StrategieAssignment_1_4)
	{ after(grammarAccess.getImplementationAccess().getStrategieAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implementation__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementationAccess().getRightCurlyBracketKeyword_1_5()); }
	'}'
	{ after(grammarAccess.getImplementationAccess().getRightCurlyBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dataset__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dataset__Group__0__Impl
	rule__Dataset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasetAccess().getDatasetKeyword_0()); }
	'Dataset'
	{ after(grammarAccess.getDatasetAccess().getDatasetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dataset__Group__1__Impl
	rule__Dataset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasetAccess().getPathAssignment_1()); }
	(rule__Dataset__PathAssignment_1)
	{ after(grammarAccess.getDatasetAccess().getPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dataset__Group__2__Impl
	rule__Dataset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasetAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDatasetAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dataset__Group__3__Impl
	rule__Dataset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasetAccess().getCibleAssignment_3()); }
	(rule__Dataset__CibleAssignment_3)
	{ after(grammarAccess.getDatasetAccess().getCibleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dataset__Group__4__Impl
	rule__Dataset__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasetAccess().getPredictivesAssignment_4()); }
	(rule__Dataset__PredictivesAssignment_4)
	{ after(grammarAccess.getDatasetAccess().getPredictivesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dataset__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDatasetAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDatasetAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Strategie__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strategie__Group_0__0__Impl
	rule__Strategie__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Strategie__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategieAccess().getStrategieKeyword_0_0()); }
	'Strategie'
	{ after(grammarAccess.getStrategieAccess().getStrategieKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strategie__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Strategie__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Strategie__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStrategieAccess().getStrategieAssignment_0_1()); }
	(rule__Strategie__StrategieAssignment_0_1)
	{ after(grammarAccess.getStrategieAccess().getStrategieAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Validation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validation__Group__0__Impl
	rule__Validation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationAccess().getValidationKeyword_0()); }
	'Validation'
	{ after(grammarAccess.getValidationAccess().getValidationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Validation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValidationAccess().getPourcentageAssignment_1()); }
	(rule__Validation__PourcentageAssignment_1)
	{ after(grammarAccess.getValidationAccess().getPourcentageAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CrossValidation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CrossValidation__Group__0__Impl
	rule__CrossValidation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossValidation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCrossValidationAccess().getCrossValidationAction_0()); }
	()
	{ after(grammarAccess.getCrossValidationAccess().getCrossValidationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossValidation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CrossValidation__Group__1__Impl
	rule__CrossValidation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossValidation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCrossValidationAccess().getCrossValidationKeyword_1()); }
	'CrossValidation'
	{ after(grammarAccess.getCrossValidationAccess().getCrossValidationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossValidation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CrossValidation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossValidation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCrossValidationAccess().getKAssignment_2()); }
	(rule__CrossValidation__KAssignment_2)?
	{ after(grammarAccess.getCrossValidationAccess().getKAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cible__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cible__Group__0__Impl
	rule__Cible__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cible__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCibleAccess().getCibleKeyword_0()); }
	'Cible'
	{ after(grammarAccess.getCibleAccess().getCibleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cible__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cible__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cible__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCibleAccess().getIdColonneParserRuleCall_1()); }
	ruleidColonne
	{ after(grammarAccess.getCibleAccess().getIdColonneParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predictives__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predictives__Group__0__Impl
	rule__Predictives__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predictives__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredictivesAccess().getPredictivesKeyword_0()); }
	'Predictives'
	{ after(grammarAccess.getPredictivesAccess().getPredictivesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predictives__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predictives__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predictives__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPredictivesAccess().getPredictivesAssignment_1()); }
		(rule__Predictives__PredictivesAssignment_1)
		{ after(grammarAccess.getPredictivesAccess().getPredictivesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getPredictivesAccess().getPredictivesAssignment_1()); }
		(rule__Predictives__PredictivesAssignment_1)*
		{ after(grammarAccess.getPredictivesAccess().getPredictivesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdColonne__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdColonne__Group__0__Impl
	rule__IdColonne__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdColonne__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdColonneAccess().getColonneKeyword_0()); }
	'Colonne'
	{ after(grammarAccess.getIdColonneAccess().getColonneKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdColonne__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdColonne__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdColonne__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdColonneAccess().getIdAssignment_1()); }
	(rule__IdColonne__IdAssignment_1)
	{ after(grammarAccess.getIdColonneAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithme__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__0__Impl
	rule__Algorithme__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getAlgorithmeKeyword_0()); }
	'Algorithme'
	{ after(grammarAccess.getAlgorithmeAccess().getAlgorithmeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getTextAssignment_1()); }
	(rule__Algorithme__TextAssignment_1)
	{ after(grammarAccess.getAlgorithmeAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Metrique__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metrique__Group__0__Impl
	rule__Metrique__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrique__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetriqueAccess().getMetriqueKeyword_0()); }
	'Metrique'
	{ after(grammarAccess.getMetriqueAccess().getMetriqueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrique__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Metrique__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrique__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetriqueAccess().getTextAssignment_1()); }
	(rule__Metrique__TextAssignment_1)
	{ after(grammarAccess.getMetriqueAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MML__MmlAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMMLAccess().getMmlImplementationParserRuleCall_2_0()); }
		ruleImplementation
		{ after(grammarAccess.getMMLAccess().getMmlImplementationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MML__MmlAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMMLAccess().getMmlDatasetParserRuleCall_3_0()); }
		ruleDataset
		{ after(grammarAccess.getMMLAccess().getMmlDatasetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__AlgoAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationAccess().getAlgoAlgorithmeParserRuleCall_1_2_0()); }
		ruleAlgorithme
		{ after(grammarAccess.getImplementationAccess().getAlgoAlgorithmeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__MetriqueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationAccess().getMetriqueMetriqueParserRuleCall_1_3_0()); }
		ruleMetrique
		{ after(grammarAccess.getImplementationAccess().getMetriqueMetriqueParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__StrategieAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementationAccess().getStrategieStrategieParserRuleCall_1_4_0()); }
		ruleStrategie
		{ after(grammarAccess.getImplementationAccess().getStrategieStrategieParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__PathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatasetAccess().getPathSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDatasetAccess().getPathSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__CibleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatasetAccess().getCibleCibleParserRuleCall_3_0()); }
		ruleCible
		{ after(grammarAccess.getDatasetAccess().getCibleCibleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dataset__PredictivesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatasetAccess().getPredictivesPredictivesParserRuleCall_4_0()); }
		rulePredictives
		{ after(grammarAccess.getDatasetAccess().getPredictivesPredictivesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Strategie__StrategieAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrategieAccess().getStrategieValidationParserRuleCall_0_1_0()); }
		ruleValidation
		{ after(grammarAccess.getStrategieAccess().getStrategieValidationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Validation__PourcentageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValidationAccess().getPourcentageINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getValidationAccess().getPourcentageINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CrossValidation__KAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCrossValidationAccess().getKINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getCrossValidationAccess().getKINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predictives__PredictivesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredictivesAccess().getPredictivesIdColonneParserRuleCall_1_0()); }
		ruleidColonne
		{ after(grammarAccess.getPredictivesAccess().getPredictivesIdColonneParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdColonne__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdColonneAccess().getIdINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIdColonneAccess().getIdINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAlgorithmeAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Metrique__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetriqueAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMetriqueAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
